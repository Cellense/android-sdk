/*
 * Copyright 2013 Chris Banes
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'maven'
apply plugin: 'signing'

def isReleaseBuild() {
    return !version.endsWith("SNAPSHOT");
}

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
            : "https://oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                pom.groupId = 'com.infinario.android.infinariosdk'
                pom.artifactId = 'infinario-android-sdk'
                pom.version = '1.1.1'

                repository(url: getReleaseRepositoryUrl()) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }
                snapshotRepository(url: getSnapshotRepositoryUrl()) {
                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
                }

                pom.project {
                    name 'Infinario Android SDK'
                    packaging 'aar'
                    description 'Infinario Android SDK'
                    url 'http://infinario.com'

                    scm {
                        url 'https://github.com/Infinario/android-sdk'
                        connection 'scm:git:https://github.com/Infinario/android-sdk.git'
                        developerConnection 'scm:git:https://github.com/Infinario/android-sdk.git'
                    }

                    licenses {
                        license {
                            name 'Apache 2 License'
                            url 'http://www.apache.org/licenses/LICENSE-2.0'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'igi'
                            name 'Igor Liska'
                        }
                    }
                }
            }
        }
    }

    signing {
        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    //task androidJavadocs(type: Javadoc) {
        //source = android.sourceSets.main.allJava
    //}

    //task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        //classifier = 'javadoc'
        //from androidJavadocs.destinationDir
    //}

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    artifacts {
        archives androidSourcesJar
    }
}
